package ${doMain.controllerPackageName};

import cn.com.bmsoft.common.BaseController;
import ${doMain.packageName}.${doMain.className};
import ${doMain.servicePackageName}.${doMain.className}Service;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import lombok.RequiredArgsConstructor;
import cn.com.bmsoft.common.util.RestResultGenerator;
import cn.com.bmsoft.common.bean.ResponseResult;
import cn.com.bmsoft.common.page.PageDto;
import cn.com.bmsoft.common.dto.DeleteInDto;
import java.util.List;
import org.springframework.web.bind.annotation.PutMapping;
import $!{doMain.inBeanPackageName}.$!{doMain.className}InDTO;
import $!{doMain.outBeanPackageName}.$!{doMain.className}OutDTO;


/**
 * ${doMain.classNote}
 *
 * @author ${doMain.author}
 * @date ${doMain.date}
 */
@RestController
@CrossOrigin(origins = "*")
@RequiredArgsConstructor
@RequestMapping("${doMain.simplePackageName}")
@Api(value = "${doMain.className}Controller", tags = {"${doMain.classNote}"})
public class ${doMain.className}Controller extends BaseController {

    private final ${doMain.className}Service ${doMain.nickName}Service;

    /**
     * 插入
     * @param ${doMain.nickName}InDTO 入参实体
     * @return ResponseResult
     */
    @PostMapping(value = "save")
    public ResponseResult<Long> save(@RequestBody ${doMain.className}InDTO  ${doMain.nickName}InDTO) throws Exception{
        return RestResultGenerator.genSuccessResult(${doMain.nickName}Service.save(${doMain.nickName}InDTO));
    }

    /**
     * 查询列表(分页)
     * @param ${doMain.nickName}InDTO 入参实体
     * @return ResponseResult
     */
    @PostMapping(value = "get${doMain.className}List")
    public ResponseResult<PageDto<${doMain.className}OutDTO>> get${doMain.className}List(@RequestBody ${doMain.className}InDTO ${doMain.nickName}InDTO) throws Exception{
        return RestResultGenerator.genSuccessResult(${doMain.nickName}Service.get${doMain.className}List(${doMain.nickName}InDTO));
    }


    /**
     * 更新
     * @param ${doMain.nickName}InDTO
     * @return ResponseResult
     */
    @PutMapping(value = "update")
    public ResponseResult<Long> update(@RequestBody  ${doMain.className}InDTO ${doMain.nickName}InDTO) throws Exception{
        return RestResultGenerator.genSuccessResult(${doMain.nickName}Service.update(${doMain.nickName}InDTO));
    }


    /**
     * 主键查询
     * @param id id
     * @return ResponseResult
     */
    @ResponseBody
    @GetMapping(value = "{id}")
    public ResponseResult<${doMain.className}OutDTO> selectById(@PathVariable("id") ${doMain.idJavaType} id) throws Exception{
        return RestResultGenerator.genSuccessResult(${doMain.nickName}Service.selectById(id));
    }

    /**
     * 根据id集合删除记录
     * @param ids id集合
     * @return ResponseResult
     */
    @PutMapping(value = "delete")
    public ResponseResult<Integer> delete(@RequestBody DeleteInDto ids) throws Exception{
        return RestResultGenerator.genSuccessResult(${doMain.nickName}Service.delete(ids));
    }
}
